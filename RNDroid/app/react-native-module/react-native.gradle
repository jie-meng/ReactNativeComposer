//Generated by Rewards/android_build_tasks/generate_aar_libs.sh, don't modify manually
void runBefore(String dependentTaskName, Task task) {
    Task dependentTask = tasks.findByPath(dependentTaskName);
    if (dependentTask != null) {
        dependentTask.dependsOn task
    }
}

allprojects {
    repositories {
        maven {
            url './react-native-module/react-native'
        }
        flatDir {
            dirs './react-native-module/react-native-deps'
        }
    }
    afterEvaluate { project ->
        if (project.name == "app") {
            // Grab all build types and product flavors
            def buildTypes = android.buildTypes.collect { type -> type.name }
            def productFlavors = android.productFlavors.collect { flavor -> flavor.name }

            def bundleAssetName = "index.android.bundle";

            def origJsBundleFile = "${project.projectDir}/react-native-module/index.android.bundle"
            def origResourcesDir = "${project.projectDir}/react-native-module/res/"

            // When no product flavors defined, use empty
            if (!productFlavors) productFlavors.add('')

            productFlavors.each { productFlavorName ->
                buildTypes.each { buildTypeName ->
                    // Create variant and target names
                    def flavorNameCapitalized = "${productFlavorName.capitalize()}"
                    def buildNameCapitalized = "${buildTypeName.capitalize()}"
                    def targetName = "${flavorNameCapitalized}${buildNameCapitalized}"
                    def targetPath = productFlavorName ?
                            "${productFlavorName}/${buildTypeName}" :
                            "${buildTypeName}"

                    // React js bundle directories
                    def jsBundleDir = file("$buildDir/intermediates/assets/${targetPath}")
                    def resourcesDir = file("$buildDir/intermediates/res/merged/${targetPath}")
                    def jsBundleFile = file("$jsBundleDir/$bundleAssetName")

                    // Bundle task name for variant
                    def bundleJsAndAssetsTaskName = "bundle${targetName}JsAndAssets"

                    def currentBundleTask = tasks.create(
                            name: bundleJsAndAssetsTaskName,
                            type: Copy) {
                        group = "react"
                        description = "bundle JS and assets for ${targetName}."

                        // Create dirs if they are not there (e.g. the "clean" task just ran)
                        doFirst {
                            jsBundleDir.mkdirs()
                            resourcesDir.mkdirs()
                        }

                        // Set up inputs and outputs so gradle can cache the result
                        inputs.files fileTree(dir: "../react-native-module")
                        outputs.dir jsBundleDir
                        outputs.dir resourcesDir

                        from "${origJsBundleFile}"
                        into "${jsBundleDir}"

                        doLast {
                            copy {
                                from "${origResourcesDir}"
                                into "${resourcesDir}"
                            }
                        }
                    }

                    // Hook bundle${productFlavor}${buildType}JsAndAssets into the android build process
                    currentBundleTask.dependsOn("merge${targetName}Resources")
                    currentBundleTask.dependsOn("merge${targetName}Assets")

                    runBefore("process${flavorNameCapitalized}Armeabi-v7a${buildNameCapitalized}Resources", currentBundleTask)
                    runBefore("process${flavorNameCapitalized}X86${buildNameCapitalized}Resources", currentBundleTask)
                    runBefore("processUniversal${targetName}Resources", currentBundleTask)
                    runBefore("process${targetName}Resources", currentBundleTask)
                    runBefore("dataBindingProcessLayouts${targetName}", currentBundleTask)
                }
            }
        }
    }
}

android {
    dependencies {
        implementation "com.facebook.react:react-native:0.54.0"
    }
}
